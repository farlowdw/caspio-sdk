module.exports = {
  /**
   * Possible query parameters to use for criteria when pulling records from a table or view
   */
  validTblViewQueryParameters: [
    'select',
    'where',
    'groupBy',
    'orderBy',
    'limit',
    'pageNumber',
    'pageSize',
  ],
  /**
   * Default criteria for making *paginated* GET requests for records from a table or view
   */
  defaultSelectionCriteriaPaginated: {
    select: '*',
    where: '',
    groupBy: '',
    orderBy: '',
    limit: null,
    pageNumber: null,
    pageSize: null,
  },
  /**
   * Default criteria for making *non-paginated* GET requests for records from a table or view
   */
  defaultSelectionCriteria: {
    select: '*',
    where: '',
    groupBy: '',
    orderBy: '',
    limit: 1000,
  },
  /**
   * Deployment methods available in REST API (meant to be used when getting the DataPage deploy code)
   */
  deploymentMethods: {
    iFrame: 'I',
    Frame: 'F',
    URL: 'U',
    Link: 'L',
    Embedded: 'E',
    Net: 'N',
    PHP: 'P',
    ASP: 'A',
    ASPX: 'X',
    Facebook: 'B',
    'WordPress FRAME': 'Y',
    'WordPress EMBED': 'Z',
  },
  /**
   * From Caspio: A field name cannot contain words reserved for Microsoft SQL Server. Below are the reserved keywords. (Live link: https://docs.microsoft.com/en-us/sql/t-sql/language-elements/reserved-keywords-transact-sql?view=sql-server-ver15). Run this in the browser console (Chrome) when at the link provided above: copy(Array.from(document.querySelectorAll('section.row > div.column > p')).slice(0,185).map(item => item.innerText).sort())
   */
  fieldNameRestrictions: [
    'ADD',
    'ALL',
    'ALTER',
    'AND',
    'ANY',
    'AS',
    'ASC',
    'AUTHORIZATION',
    'BACKUP',
    'BEGIN',
    'BETWEEN',
    'BREAK',
    'BROWSE',
    'BULK',
    'BY',
    'CASCADE',
    'CASE',
    'CHECK',
    'CHECKPOINT',
    'CLOSE',
    'CLUSTERED',
    'COALESCE',
    'COLLATE',
    'COLUMN',
    'COMMIT',
    'COMPUTE',
    'CONSTRAINT',
    'CONTAINS',
    'CONTAINSTABLE',
    'CONTINUE',
    'CONVERT',
    'CREATE',
    'CROSS',
    'CURRENT',
    'CURRENT_DATE',
    'CURRENT_TIME',
    'CURRENT_TIMESTAMP',
    'CURRENT_USER',
    'CURSOR',
    'DATABASE',
    'DBCC',
    'DEALLOCATE',
    'DECLARE',
    'DEFAULT',
    'DELETE',
    'DENY',
    'DESC',
    'DISK',
    'DISTINCT',
    'DISTRIBUTED',
    'DOUBLE',
    'DROP',
    'DUMP',
    'ELSE',
    'END',
    'ERRLVL',
    'ESCAPE',
    'EXCEPT',
    'EXEC',
    'EXECUTE',
    'EXISTS',
    'EXIT',
    'EXTERNAL',
    'FETCH',
    'FILE',
    'FILLFACTOR',
    'FOR',
    'FOREIGN',
    'FREETEXT',
    'FREETEXTTABLE',
    'FROM',
    'FULL',
    'FUNCTION',
    'GOTO',
    'GRANT',
    'GROUP',
    'HAVING',
    'HOLDLOCK',
    'IDENTITY',
    'IDENTITYCOL',
    'IDENTITY_INSERT',
    'IF',
    'IN',
    'INDEX',
    'INNER',
    'INSERT',
    'INTERSECT',
    'INTO',
    'IS',
    'JOIN',
    'KEY',
    'KILL',
    'LEFT',
    'LIKE',
    'LINENO',
    'LOAD',
    'MERGE',
    'NATIONAL',
    'NOCHECK',
    'NONCLUSTERED',
    'NOT',
    'NULL',
    'NULLIF',
    'OF',
    'OFF',
    'OFFSETS',
    'ON',
    'OPEN',
    'OPENDATASOURCE',
    'OPENQUERY',
    'OPENROWSET',
    'OPENXML',
    'OPTION',
    'OR',
    'ORDER',
    'OUTER',
    'OVER',
    'PERCENT',
    'PIVOT',
    'PLAN',
    'PRECISION',
    'PRIMARY',
    'PRINT',
    'PROC',
    'PROCEDURE',
    'PUBLIC',
    'RAISERROR',
    'READ',
    'READTEXT',
    'RECONFIGURE',
    'REFERENCES',
    'REPLICATION',
    'RESTORE',
    'RESTRICT',
    'RETURN',
    'REVERT',
    'REVOKE',
    'RIGHT',
    'ROLLBACK',
    'ROWCOUNT',
    'ROWGUIDCOL',
    'RULE',
    'SAVE',
    'SCHEMA',
    'SECURITYAUDIT',
    'SELECT',
    'SEMANTICKEYPHRASETABLE',
    'SEMANTICSIMILARITYDETAILSTABLE',
    'SEMANTICSIMILARITYTABLE',
    'SESSION_USER',
    'SET',
    'SETUSER',
    'SHUTDOWN',
    'SOME',
    'STATISTICS',
    'SYSTEM_USER',
    'TABLE',
    'TABLESAMPLE',
    'TEXTSIZE',
    'THEN',
    'TO',
    'TOP',
    'TRAN',
    'TRANSACTION',
    'TRIGGER',
    'TRUNCATE',
    'TRY_CONVERT',
    'TSEQUAL',
    'UNION',
    'UNIQUE',
    'UNPIVOT',
    'UPDATE',
    'UPDATETEXT',
    'USE',
    'USER',
    'VALUES',
    'VARYING',
    'VIEW',
    'WAITFOR',
    'WHEN',
    'WHERE',
    'WHILE',
    'WITH',
    'WITHIN GROUP',
    'WRITETEXT',
  ],
  /**
   * Data types in Caspio (the key is the plain text representation as seen on Caspio's platform while the key value is what is used while coding and interacting with Caspio's REST API)
   */
  validDataTypes: {
    Autonumber: 'AUTONUMBER',
    'Prefixed Autonumber': 'PREFIXED AUTONUMBER',
    GUID: 'GUID',
    'Random ID': 'RANDOM ID',
    'Text (255)': 'STRING',
    'Text (64000)': 'TEXT',
    Password: 'PASSWORD',
    Number: 'NUMBER',
    Integer: 'INTEGER',
    Currency: 'CURRENCY',
    'Date/Time': 'DATE/TIME',
    'Yes/No': 'YES/NO',
    File: 'FILE',
    Timestamp: 'TIMESTAMP',
    List: {
      listString: 'LIST-STRING',
      listNumber: 'LIST-NUMBER',
      listDateTime: 'LIST-DATE/TIME',
    },
    Formula: '',
  },
  /**
   * Valid field properties when posting a new field (255 character max for Label and 4000 character max for Description)
   */
  validFieldProperties: [
    'Name',
    'Type',
    'Unique',
    'UniqueAllowNulls',
    'Label',
    'Description',
    'DisplayOrder',
    'OnInsert',
    'OnUpdate',
    'TimeZone',
    'Format',
    'Prefix',
    'Length',
    'IsFormula',
    'ListField',
  ],
  /**
   * Valid field properties when updating a field's definition
   */
  validFieldPropertiesOnUpdate: [
    'NewName',
    'NewType',
    'NewUnique',
    'NewUniqueAllowNulls',
    'NewLabel',
    'NewDescription',
    'NewDisplayOrder',
    'NewOnInsert',
    'NewOnUpdate',
    'NewTimeZone',
    'NewFormat',
    'NewPrefix',
    'NewLength',
    'NewListField',
  ],
  /**
   * The following are valid time zones in Caspio. To retrieve the most up-to-date list, simply go to any table design page, select the data type of "Timestamp" for the field, and then paste the following code into the browser's console (Chrome): copy(Array.from(document.querySelectorAll('select.NumberTypeSelectBox option')).reduce((acc, timeOption) => { const timeZoneTextualRepresentation = timeOption.text; const timeZoneActualValue = timeOption.value; acc[timeZoneTextualRepresentation] = timeZoneActualValue; return acc }, {}));
   */
  validTimeZones: {
    '(UTC) Coordinated Universal Time': 'UTC',
    '(UTC-12:00) International Date Line West': 'Dateline Standard Time',
    '(UTC-11:00) Coordinated Universal Time-11': 'UTC-11',
    '(UTC-10:00) Aleutian Islands': 'Aleutian Standard Time',
    '(UTC-10:00) Hawaii': 'Hawaiian Standard Time',
    '(UTC-09:30) Marquesas Islands': 'Marquesas Standard Time',
    '(UTC-09:00) Alaska': 'Alaskan Standard Time',
    '(UTC-09:00) Coordinated Universal Time-09': 'UTC-09',
    '(UTC-08:00) Baja California': 'Pacific Standard Time (Mexico)',
    '(UTC-08:00) Coordinated Universal Time-08': 'UTC-08',
    '(UTC-08:00) Pacific Time (US & Canada)': 'Pacific Standard Time',
    '(UTC-07:00) Arizona': 'US Mountain Standard Time',
    '(UTC-07:00) Chihuahua, La Paz, Mazatlan': 'Mountain Standard Time (Mexico)',
    '(UTC-07:00) Mountain Time (US & Canada)': 'Mountain Standard Time',
    '(UTC-07:00) Yukon': 'Yukon Standard Time',
    '(UTC-06:00) Central America': 'Central America Standard Time',
    '(UTC-06:00) Central Time (US & Canada)': 'Central Standard Time',
    '(UTC-06:00) Easter Island': 'Easter Island Standard Time',
    '(UTC-06:00) Guadalajara, Mexico City, Monterrey': 'Central Standard Time (Mexico)',
    '(UTC-06:00) Saskatchewan': 'Canada Central Standard Time',
    '(UTC-05:00) Bogota, Lima, Quito, Rio Branco': 'SA Pacific Standard Time',
    '(UTC-05:00) Chetumal': 'Eastern Standard Time (Mexico)',
    '(UTC-05:00) Eastern Time (US & Canada)': 'Eastern Standard Time',
    '(UTC-05:00) Haiti': 'Haiti Standard Time',
    '(UTC-05:00) Havana': 'Cuba Standard Time',
    '(UTC-05:00) Indiana (East)': 'US Eastern Standard Time',
    '(UTC-05:00) Turks and Caicos': 'Turks And Caicos Standard Time',
    '(UTC-04:00) Asuncion': 'Paraguay Standard Time',
    '(UTC-04:00) Atlantic Time (Canada)': 'Atlantic Standard Time',
    '(UTC-04:00) Caracas': 'Venezuela Standard Time',
    '(UTC-04:00) Cuiaba': 'Central Brazilian Standard Time',
    '(UTC-04:00) Georgetown, La Paz, Manaus, San Juan': 'SA Western Standard Time',
    '(UTC-04:00) Santiago': 'Pacific SA Standard Time',
    '(UTC-03:30) Newfoundland': 'Newfoundland Standard Time',
    '(UTC-03:00) Araguaina': 'Tocantins Standard Time',
    '(UTC-03:00) Brasilia': 'E. South America Standard Time',
    '(UTC-03:00) Cayenne, Fortaleza': 'SA Eastern Standard Time',
    '(UTC-03:00) City of Buenos Aires': 'Argentina Standard Time',
    '(UTC-03:00) Greenland': 'Greenland Standard Time',
    '(UTC-03:00) Montevideo': 'Montevideo Standard Time',
    '(UTC-03:00) Punta Arenas': 'Magallanes Standard Time',
    '(UTC-03:00) Saint Pierre and Miquelon': 'Saint Pierre Standard Time',
    '(UTC-03:00) Salvador': 'Bahia Standard Time',
    '(UTC-02:00) Coordinated Universal Time-02': 'UTC-02',
    '(UTC-02:00) Mid-Atlantic - Old': 'Mid-Atlantic Standard Time',
    '(UTC-01:00) Azores': 'Azores Standard Time',
    '(UTC-01:00) Cabo Verde Is.': 'Cape Verde Standard Time',
    '(UTC+00:00) Dublin, Edinburgh, Lisbon, London': 'GMT Standard Time',
    '(UTC+00:00) Monrovia, Reykjavik': 'Greenwich Standard Time',
    '(UTC+00:00) Sao Tome': 'Sao Tome Standard Time',
    '(UTC+01:00) Casablanca': 'Morocco Standard Time',
    '(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna': 'W. Europe Standard Time',
    '(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague': 'Central Europe Standard Time',
    '(UTC+01:00) Brussels, Copenhagen, Madrid, Paris': 'Romance Standard Time',
    '(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb': 'Central European Standard Time',
    '(UTC+01:00) West Central Africa': 'W. Central Africa Standard Time',
    '(UTC+02:00) Amman': 'Jordan Standard Time',
    '(UTC+02:00) Athens, Bucharest': 'GTB Standard Time',
    '(UTC+02:00) Beirut': 'Middle East Standard Time',
    '(UTC+02:00) Cairo': 'Egypt Standard Time',
    '(UTC+02:00) Chisinau': 'E. Europe Standard Time',
    '(UTC+02:00) Damascus': 'Syria Standard Time',
    '(UTC+02:00) Gaza, Hebron': 'West Bank Standard Time',
    '(UTC+02:00) Harare, Pretoria': 'South Africa Standard Time',
    '(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius': 'FLE Standard Time',
    '(UTC+02:00) Jerusalem': 'Israel Standard Time',
    '(UTC+02:00) Juba': 'South Sudan Standard Time',
    '(UTC+02:00) Kaliningrad': 'Kaliningrad Standard Time',
    '(UTC+02:00) Khartoum': 'Sudan Standard Time',
    '(UTC+02:00) Tripoli': 'Libya Standard Time',
    '(UTC+02:00) Windhoek': 'Namibia Standard Time',
    '(UTC+03:00) Baghdad': 'Arabic Standard Time',
    '(UTC+03:00) Istanbul': 'Turkey Standard Time',
    '(UTC+03:00) Kuwait, Riyadh': 'Arab Standard Time',
    '(UTC+03:00) Minsk': 'Belarus Standard Time',
    '(UTC+03:00) Moscow, St. Petersburg': 'Russian Standard Time',
    '(UTC+03:00) Nairobi': 'E. Africa Standard Time',
    '(UTC+03:00) Volgograd': 'Volgograd Standard Time',
    '(UTC+03:30) Tehran': 'Iran Standard Time',
    '(UTC+04:00) Abu Dhabi, Muscat': 'Arabian Standard Time',
    '(UTC+04:00) Astrakhan, Ulyanovsk': 'Astrakhan Standard Time',
    '(UTC+04:00) Baku': 'Azerbaijan Standard Time',
    '(UTC+04:00) Izhevsk, Samara': 'Russia Time Zone 3',
    '(UTC+04:00) Port Louis': 'Mauritius Standard Time',
    '(UTC+04:00) Saratov': 'Saratov Standard Time',
    '(UTC+04:00) Tbilisi': 'Georgian Standard Time',
    '(UTC+04:00) Yerevan': 'Caucasus Standard Time',
    '(UTC+04:30) Kabul': 'Afghanistan Standard Time',
    '(UTC+05:00) Ashgabat, Tashkent': 'West Asia Standard Time',
    '(UTC+05:00) Ekaterinburg': 'Ekaterinburg Standard Time',
    '(UTC+05:00) Islamabad, Karachi': 'Pakistan Standard Time',
    '(UTC+05:00) Qyzylorda': 'Qyzylorda Standard Time',
    '(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi': 'India Standard Time',
    '(UTC+05:30) Sri Jayawardenepura': 'Sri Lanka Standard Time',
    '(UTC+05:45) Kathmandu': 'Nepal Standard Time',
    '(UTC+06:00) Astana': 'Central Asia Standard Time',
    '(UTC+06:00) Dhaka': 'Bangladesh Standard Time',
    '(UTC+06:00) Omsk': 'Omsk Standard Time',
    '(UTC+06:30) Yangon (Rangoon)': 'Myanmar Standard Time',
    '(UTC+07:00) Bangkok, Hanoi, Jakarta': 'SE Asia Standard Time',
    '(UTC+07:00) Barnaul, Gorno-Altaysk': 'Altai Standard Time',
    '(UTC+07:00) Hovd': 'W. Mongolia Standard Time',
    '(UTC+07:00) Krasnoyarsk': 'North Asia Standard Time',
    '(UTC+07:00) Novosibirsk': 'N. Central Asia Standard Time',
    '(UTC+07:00) Tomsk': 'Tomsk Standard Time',
    '(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi': 'China Standard Time',
    '(UTC+08:00) Irkutsk': 'North Asia East Standard Time',
    '(UTC+08:00) Kuala Lumpur, Singapore': 'Singapore Standard Time',
    '(UTC+08:00) Perth': 'W. Australia Standard Time',
    '(UTC+08:00) Taipei': 'Taipei Standard Time',
    '(UTC+08:00) Ulaanbaatar': 'Ulaanbaatar Standard Time',
    '(UTC+08:45) Eucla': 'Aus Central W. Standard Time',
    '(UTC+09:00) Chita': 'Transbaikal Standard Time',
    '(UTC+09:00) Osaka, Sapporo, Tokyo': 'Tokyo Standard Time',
    '(UTC+09:00) Pyongyang': 'North Korea Standard Time',
    '(UTC+09:00) Seoul': 'Korea Standard Time',
    '(UTC+09:00) Yakutsk': 'Yakutsk Standard Time',
    '(UTC+09:30) Adelaide': 'Cen. Australia Standard Time',
    '(UTC+09:30) Darwin': 'AUS Central Standard Time',
    '(UTC+10:00) Brisbane': 'E. Australia Standard Time',
    '(UTC+10:00) Canberra, Melbourne, Sydney': 'AUS Eastern Standard Time',
    '(UTC+10:00) Guam, Port Moresby': 'West Pacific Standard Time',
    '(UTC+10:00) Hobart': 'Tasmania Standard Time',
    '(UTC+10:00) Vladivostok': 'Vladivostok Standard Time',
    '(UTC+10:30) Lord Howe Island': 'Lord Howe Standard Time',
    '(UTC+11:00) Bougainville Island': 'Bougainville Standard Time',
    '(UTC+11:00) Chokurdakh': 'Russia Time Zone 10',
    '(UTC+11:00) Magadan': 'Magadan Standard Time',
    '(UTC+11:00) Norfolk Island': 'Norfolk Standard Time',
    '(UTC+11:00) Sakhalin': 'Sakhalin Standard Time',
    '(UTC+11:00) Solomon Is., New Caledonia': 'Central Pacific Standard Time',
    '(UTC+12:00) Anadyr, Petropavlovsk-Kamchatsky': 'Russia Time Zone 11',
    '(UTC+12:00) Auckland, Wellington': 'New Zealand Standard Time',
    '(UTC+12:00) Coordinated Universal Time+12': 'UTC+12',
    '(UTC+12:00) Fiji': 'Fiji Standard Time',
    '(UTC+12:00) Petropavlovsk-Kamchatsky - Old': 'Kamchatka Standard Time',
    '(UTC+12:45) Chatham Islands': 'Chatham Islands Standard Time',
    '(UTC+13:00) Coordinated Universal Time+13': 'UTC+13',
    "(UTC+13:00) Nuku'alofa": 'Tonga Standard Time',
    '(UTC+13:00) Samoa': 'Samoa Standard Time',
    '(UTC+14:00) Kiritimati Island': 'Line Islands Standard Time',
  },
  /**
   * The following field "Type" properties are read-only:
   */
  readOnlyFieldTypes: [
    'AUTONUMBER',
    'PREFIXED AUTONUMBER',
    'GUID',
    'RANDOM ID',
    'TIMESTAMP',
  ],
  /**
   * The following is a list of valid field types in Caspio:
   */
  validFieldTypes: [
    'AUTONUMBER',
    'PREFIXED AUTONUMBER',
    'GUID',
    'RANDOM ID',
    'STRING',
    'TEXT',
    'PASSWORD',
    'NUMBER',
    'INTEGER',
    'CURRENCY',
    'DATE/TIME',
    'YES/NO',
    'FILE',
    'TIMESTAMP',
    'LIST-STRING',
    'LIST-NUMBER',
    'LIST-DATE/TIME',
  ],
};
